subPackages: ~

meta:
  homepage: ~
  license: ~
  author: ~

  dependabot:
    npm:
      interval: weekly
      day: Monday
      time: 00:00
      timezone: UTC
      open-pull-requests-limit: 5
    docker:
      interval: daily
      day: Monday
      time: 00:00
      timezone: UTC
      open-pull-requests-limit: 5
    github-actions:
      interval: daily
      day: Monday
      time: 00:00
      timezone: UTC
      open-pull-requests-limit: 5

  executables:
    - "**/*.sh"
    - "bin/**/*.js"
    - "tests/**/*.js"

  repository:
    private: ~
    visibility: ~
    hasIssues: true
    hasDiscussions: false
    hasWiki: false
    hasProjects: false
    defaultBranch: ~
    allowForking: ~
    webCommitSignoffRequired: true
    secretScanning: enabled
    secretScanningPushProtection: enabled
    vulnerabilityAlerts: true
    dependabotsecurityupdates: true
    privateVulnerabilityReporting: true

lint:
  trim: true

release:
  enabled: false
  branches: [main]

docker:
  composeFile: compose.yaml
  defaultTag: ~
  autoTags: ~

commits:
  requireType: true
  strictType: true

  # DOCS: https://www.bavaga.com/blog/2025/01/27/my-ultimate-conventional-commit-types-cheatsheet/
  types:
    feat:
      description: Uused for adding new features or functionality. (MINOR in semantic versioning).
      productionChange: true
      notableChange: true
      requireScope: true
      strictScope: true
    fix:
      description: Used to address actual bugs that cause incorrect behavior in production code. (PATCH in semantic versioning).
      productionChange: true
      notableChange: true
      requireScope: true
      strictScope: true
    refactor:
      description: Is for structural improvements to the code without changing its behavior. Unlike style, refactor focuses on enhancing the internal structure, logic, or organization of the code without altering its external behavior.
      productionChange: true
      notableChange: true
      requireScope: true
      strictScope: true

    build:
      title: Build process or dependencies
      description: Should be used for changes that impact the build process or production dependencies, including tools and configurations necessary for application deployment or runtime.
      notableChange: true
      requireScope: false
      strictScope: true
      scopes:
        deps: Changing or upgrading dependencies that affect production code.
        release: Releasing code.
    chore:
      title: Maintenance and routine tasks
      description: Used for administrative or supportive tasks that do not impact production code.
      requireScope: false
      strictScope: true
      scopes:
        deps: Updating development dependencies.
        metadata: Updating package metadata.
    docs:
      title: Documentation
      description: Used for changes to documentation, comments, or API descriptions.
      requireScope: true
      strictScope: true
    style:
      title: Code formatting and style-only changes
      description: Is for cosmetic changes to code that do not affect its behavior. Style changes are purely superficial and do not affect the structure, semantics, or functionality of the code.
      requireScope: true
      strictScope: true

  scopes: ~

docs: ~
